@model MagicTexter.Models.Entities.EditTemplate

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var counter = 0;
}
@section Styles {
    @Styles.Render("~/Content/bootstrap-select.css");
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div>
        <h3><b>Edit template :</b></h3>
        <ul class="nav nav-tabs">
            <li>Edit <b>@Model.Name</b></li>
            <li class="pull-right"><button class="btn btn-success" id="nextToSave" type="submit">Save</button></li>
        </ul>
    </div>

    <div class="form-horizontal" style="padding-top:2%">
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-md-2">Template items:</label>
            <div class="col-md-5">
                <div class="panel panel-default">
                    <table class="table" id="TemplateItems-table">
                        <thead>
                            <tr>
                                <th class="col-md-1"></th>
                                <th class="col-md-9" id="itemMultiselect" style="max-width:200px">
                                    @Html.ListBox("ItemsIds", Model.Items.Select(x => x.ToSelectListItem(Model.ItemsIds.Contains(x.Id))), new { @class = "selectpicker form-control", id = "dropDownOfItems" })
                                </th>
                                <td class="col-md-1" align="center"><span class="btn btn-primary btn-md glyphicon glyphicon-plus" id="addItem"></span></td>
                            </tr>
                        </thead>
                        <tbody class="ui-sortable" style="overflow: auto;">
                            @for (int i = 0; i < Model.ItemsIds.Count(); i++)
                            {
                                var itemName = Model.Items.FirstOrDefault(x => x.Id == Model.ItemsIds.ToList()[i]).Name;
                                <tr class="ui-sortable-handle">
                                    <td class="col-md-1" style="vertical-align:middle"><span class="glyphicon glyphicon-resize-vertical" title="Move up or down"></span></td>
                                    <input class="index" type="hidden" name=@Html.Raw("SelectedItemsIds["+(counter++)+"]") value="@Model.ItemsIds.ToList()[i]" />
                                    <td class="col-md-9 itemName" style="vertical-align:middle">@itemName</td>
                                    <td class="col-md-1" align='center'><span class='btn btn-primary btn-md glyphicon glyphicon-remove'></span></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-select.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script type="text/javascript">
        var itemsCounter = @Model.ItemsIds.Count();
        var allChoosedItems = [];
        var allItems = [];

        $(document).ready(function () {
            //Helper function to keep table row from collapsing when being sorted
            var fixHelperModified = function (e, ui) {
                ui.children().each(function () {
                    $(this).width($(this).width());
                });
                return ui;
            };

            updateIndex = function (e, ui) {
                $('input.index', ui.item.parent()).each(function (i) {
                    $(this).attr("name", "SelectedItemsIds[" + i + "]")
                });
            };

            $('#TemplateItems-table tbody').sortable({
                helper: fixHelperModified,
                stop: updateIndex
            }).disableSelection();

            @foreach (var element in Model.Items) {
                @:allItems.push({ Id: "@element.Id", Name: "@element.Name", Position: "@element.ItemMappings" });
            };

            @foreach (var element in Model.PreselectedItemsNames)
            {
                @:allChoosedItems.push("@element");
            };          
        });

        window.onload = function () {
            $('#itemMultiselect>div>div>ul>').filter('li[class="selected"]').each(function () {
                $(this).addClass("hidden");
            })
        };

        //Delete button in table rows
        $('table').on('click', '.glyphicon-remove', function () {
            var value = $(this).closest('tr').find('td.itemName').html();
            $(this).closest('tr').remove();
            $('input.index', '#TemplateItems-table>tbody>tr').each(function (i) {
                var x = $(this).attr("name", "SelectedItemsIds[" + i + "]")
            });
            itemsCounter -= 1;
            $('#itemMultiselect>div>div>ul>').filter('li[class="selected hidden"]').find('a>span.text:contains("' + value + '")').closest('li').removeClass("hidden");
            $('#itemMultiselect>div>div>ul>').filter('li[class="selected"]').find('a>span.text:contains("' + value + '")').click();
            allChoosedItems = $.grep(allChoosedItems, function (indexName) {
                return indexName != value;
            });

            var a = allChoosedItems;
        });

        $('#addItem').on('click', function () {
            var value = $('#dropDownOfItems').val();
            for (var i = 0; i < value.length; i++) {
                if (value !== "") {
                    var res = $.grep(allItems, function (el) {
                        return el.Id == value[i];
                    });
                        if (res.length > 0) {
                            var itemFiltered = res[0]["Name"].toString();
                            if ((jQuery.inArray(itemFiltered, allChoosedItems) === -1)) {
                            allChoosedItems.push(itemFiltered);
                            $('table[id="TemplateItems-table"]>tbody').append("<tr class='ui-sortable-handle'>" +
                                "<td class='col-md-1' style='vertical-align:middle'><span class='glyphicon glyphicon-resize-vertical' title='Move up or down'></span></td>" +
                                "<input class='index' type='hidden' name='SelectedItemsIds[" + itemsCounter + "]' value='" + value[i] + "' />"+
                                "<td class='col-md-9 itemName' style='vertical-align:middle'>" + itemFiltered + "</td>" +
                                "<td class='table-links-navigation col-md-1' align='center'><span class='btn btn-primary btn-md glyphicon glyphicon-remove'></span></td></tr>");
                            itemsCounter += 1;
                            $('#itemMultiselect>div>div>ul>').filter('li[class="selected"]').find('a>span.text:contains("' + itemFiltered + '")').closest('li').addClass('hidden');
                        }
                    }
                };
            }
        });
    </script>
}
